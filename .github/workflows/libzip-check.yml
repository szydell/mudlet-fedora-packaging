name: Check for new libzip release  

on:  
  schedule:  
    - cron: '0 0 * * 1' # Raz w tygodniu w poniedziałek o północy  
  workflow_dispatch: # Umożliwia ręczne uruchamianie workflow  

jobs:  
  check-and-update:  
    runs-on: ubuntu-latest  

    steps:  
      # Checkout the repository  
      - name: Checkout code  
        uses: actions/checkout@v3  

      # Install required tools  
      - name: Install required tools  
        run: |  
          sudo apt-get update  
          sudo apt-get install -y jq git  

      # Fetch the latest release from the luazip repository  
      - name: Get latest release from luazip  
        id: get_release  
        run: |  
          API_URL="https://api.github.com/repos/mpeterv/luazip/releases/latest"  
          LATEST_RELEASE=$(curl -s $API_URL | jq -r '.tag_name')  
          RELEASE_BODY=$(curl -s $API_URL | jq -r '.body')  
          echo "LATEST_VERSION=$LATEST_RELEASE" >> $GITHUB_ENV  
          echo "RELEASE_BODY=$RELEASE_BODY" >> $GITHUB_ENV  

      # Check if the spec file needs to be updated  
      - name: Check if update is needed  
        id: check_update  
        run: |  
          SPEC_FILE="compat-lua-zip.spec"  
          CURRENT_VERSION=$(grep -E '^Version:' "$SPEC_FILE" | awk '{print $2}')  
          echo "Current version: $CURRENT_VERSION"  
          echo "Latest version: $LATEST_VERSION"  
          if [ "$CURRENT_VERSION" = "$LATEST_VERSION" ]; then  
            echo "update_needed=false" >> $GITHUB_ENV  
          else  
            echo "update_needed=true" >> $GITHUB_ENV  

      # Update the spec file if a new version is available  
      - name: Update spec file  
        if: env.update_needed == 'true'  
        run: |  
          SPEC_FILE="compat-lua-zip.spec"  
          # Update Version  
          sed -i "s/^Version:.*/Version:        $LATEST_VERSION/" "$SPEC_FILE"  
          # Reset Release to 1  
          sed -i "s/^Release:.*/Release:        1%{?dist}/" "$SPEC_FILE"  
          # Add changelog entry  
          DATE=$(date +"%a %b %d %Y")  
          AUTHOR="GitHub Actions <actions@github.com>"  
          echo -e "* $DATE $AUTHOR - $LATEST_VERSION-1\n- $RELEASE_BODY\n" | cat - "$SPEC_FILE" > temp && mv temp "$SPEC_FILE"  
          echo "Spec file updated."  

      # Commit and push changes  
      - name: Commit and push changes  
        if: env.update_needed == 'true'  
        env:  
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
        run: |  
          git config user.name "GitHub Actions"  
          git config user.email "actions@github.com"  
          git add compat-lua-zip.spec  
          git commit -m "Update to version $LATEST_VERSION"  
          git push

